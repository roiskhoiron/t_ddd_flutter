// Mocks generated by Mockito 5.4.3 from annotations
// in t_ddd_flutter/test/domain/entities/login_request_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i3;
import 'package:t_ddd_flutter/domain/entities/login_request.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [LoginRequest].
///
/// See the documentation for Mockito's code generation for more information.
class MockLoginRequest extends _i1.Mock implements _i2.LoginRequest {
  MockLoginRequest() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get username => (super.noSuchMethod(
        Invocation.getter(#username),
        returnValue: _i3.dummyValue<String>(
          this,
          Invocation.getter(#username),
        ),
      ) as String);

  @override
  set username(String? _username) => super.noSuchMethod(
        Invocation.setter(
          #username,
          _username,
        ),
        returnValueForMissingStub: null,
      );

  @override
  String get password => (super.noSuchMethod(
        Invocation.getter(#password),
        returnValue: _i3.dummyValue<String>(
          this,
          Invocation.getter(#password),
        ),
      ) as String);

  @override
  set password(String? _password) => super.noSuchMethod(
        Invocation.setter(
          #password,
          _password,
        ),
        returnValueForMissingStub: null,
      );
}
